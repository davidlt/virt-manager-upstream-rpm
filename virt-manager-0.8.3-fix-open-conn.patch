# HG changeset patch
# User Cole Robinson <crobinso@redhat.com>
# Date 1269442662 14400
# Node ID f7d7a91070504287678514abe645fa7227bb963f
# Parent  3ae371c1a9fb4c233f10870e1d1508ef7b951137
Fix 'Open Connection' dialog

diff -r 3ae371c1a9fb -r f7d7a9107050 src/virtManager/engine.py
--- a/src/virtManager/engine.py	Wed Mar 24 10:54:38 2010 -0400
+++ b/src/virtManager/engine.py	Wed Mar 24 10:57:42 2010 -0400
@@ -341,9 +341,9 @@
         self.windowConnect = None
 
         try:
-            try:
-                conn = self._lookup_connection(uri)
-            except Exception:
+            conn = self._check_connection(uri)
+            if not conn:
+                # Unknown connection, add it
                 conn = self.add_connection(uri, readOnly, autoconnect)
 
             self.show_manager()
@@ -351,6 +351,7 @@
                 conn.open()
             return conn
         except Exception:
+            logging.exception("Error connecting to %s" % uri)
             return None
 
     def _connect_cancelled(self, connect):
@@ -513,9 +514,12 @@
         self.connections[uri]["windowHost"].show()
 
     def show_connect(self):
+        def connect_wrap(src, *args):
+            return self.connect_to_uri(*args)
+
         if self.windowConnect == None:
             self.windowConnect = vmmConnect(self.get_config(), self)
-            self.windowConnect.connect("completed", self.connect_to_uri)
+            self.windowConnect.connect("completed", connect_wrap)
             self.windowConnect.connect("cancelled", self._connect_cancelled)
         self.windowConnect.show()
 
@@ -680,12 +684,17 @@
 
         return handle_id
 
+    def _check_connection(self, uri):
+        conn = self.connections.get(uri)
+        if conn:
+            return conn["connection"]
+        return None
+
     def _lookup_connection(self, uri):
-        conn = self.connections.get(uri)
+        conn = self._check_connection(uri)
         if not conn:
             raise RuntimeError(_("Unknown connection URI %s") % uri)
-
-        return conn["connection"]
+        return conn
 
     def save_domain(self, src, uri, uuid):
         conn = self._lookup_connection(uri)
